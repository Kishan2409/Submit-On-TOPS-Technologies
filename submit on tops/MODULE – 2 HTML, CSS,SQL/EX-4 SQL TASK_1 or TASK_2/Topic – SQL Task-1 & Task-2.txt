---------------------------------------------------------------------------------------------------------------------
---------------------------------------------------------------------------------------------------------------------
                                                Topic – SQL Task-1
---------------------------------------------------------------------------------------------------------------------
---------------------------------------------------------------------------------------------------------------------


CREATE TABLE Employee
(
	EM_ID int PRIMARY KEY AUTO_INCREMENT,
    FIRST_NAME varchar(255),
    LAST_NAME varchar(255),
    SALARY float,
    JOINING_DATE varchar(255),
    DEPARTMENT varchar(255)
);

INSERT INTO `employee` (`EM_ID`, `FIRST_NAME`, `LAST_NAME`, `SALARY`, `JOINING_DATE`, `DEPARTMENT`) VALUES
(1, 'JOHN', 'ABRAHAM', 1000000, '2013-01-01', 'BANKING'),
(2, 'MICHAEL', 'CLERK', 800000, '2013-01-01', 'INSURANCE'),
(3, 'ROY', 'THOMAS', 700000, '2013-02-01', 'BANKING'),
(4, 'TOM', 'JOSE', 600000, '2013-02-01', 'INSURANCE'),
(5, 'JERRY', 'PINTO', 650000, '2013-01-01', 'INSURANCE'),
(6, 'PHILIP', 'MATHEW', 750000, '2013-01-01', 'SERVICES'),
(7, 'TESTNAME1', '123', 650000, '2013-01-01', 'SERVICES'),
(8, 'TESTNAME2', 'LNAME%', 600000, '2013-02-01', 'INSURANCE');

----------------------------

CREATE TABLE incentives
(
        incentive_id int PRIMARY KEY AUTO_INCREMENT,
        EMPLOYEE_REF_id int REFERENCES employee(EM_ID),
        INCENTIVE_DATE date, 
        INCENTIVE_AMT float 
);

INSERT INTO `incentives` (`Incentive_id`, `EMPLOYEE_REF_id`, `INCENTIVE_DATE`, `INCENTIVE_AMT`) VALUES
(1, 1, '2013-02-01', 5000),
(2, 2, '2013-02-01', 3000),
(3, 3, '2013-02-01', 4000),
(4, 1, '2013-01-01', 4500),
(5, 2, '2013-01-01', 3500);

---------------------------------------------------------------------------------------------------------------------
----------------------------------------Questions And Answers.------------------------------------------------------>
---------------------------------------------------------------------------------------------------------------------

(a)Get First_Name from employee table using alias name “Employee Name”.
ans.-->
        SELECT FIRST_NAME FROM employee WHERE LAST_NAME=123;

----------------------------
(b)Get FIRST_NAME, Joining year, Joining Month and Joining Date from employee 
table.
ans.--->
        SELECT FIRST_NAME,JOINING_DATE FROM employee;

----------------------------
(c)Get all employee details from the employee table order by First Name Ascending 
And Salary descending?
ans.--->
        SELECT * FROM employee ORDER BY FIRST_NAME ASC;
        SELECT * FROM employee ORDER BY SALARY DESC;

----------------------------
(d)Get employee details from employee table whose first name contains „o‟.
ans.--->
        SELECT * FROM employee WHERE FIRST_NAME LIKE '%o%';

----------------------------
(e)Get employee details from employee table whose joining month is “January”
ans.--->
        SELECT EM_ID,FIRST_NAME,LAST_NAME,SALARY,JOINING_DATE,DEPARTMENT FROM employee WHERE MONTH(JOINING_DATE) = 1;

----------------------------
f)Get department, total salary with respect to a department from employee table 
Order By total salary descending.
ans.--->
        SELECT SUM(SALARY),DEPARTMENT FROM employee GROUP BY DEPARTMENT ORDER BY SUM(SALARY) DESC;

----------------------------
(g)Get department wise maximum salary from employee table order by salary 
ascending?
ans.--->
        SELECT MAX(SALARY),DEPARTMENT FROM employee GROUP BY DEPARTMENT ORDER BY MAX(SALARY) ASC;

----------------------------
(h)Select first_name, incentive amount from employee and incentives table for those 
Employees who have incentives and incentive amount greater than 3000
ans.--->
        SELECT incentives.*,FIRST_NAME FROM incentives JOIN employee on incentives.EMPLOYEE_REF_id=employee.EM_ID WHERE INCENTIVE_AMT>3000;

----------------------------
(i)Select 2nd Highest salary from employee table.
ans.--->
        SELECT MAX(SALARY) AS 'Second Highest Salary',EM_ID,FIRST_NAME,LAST_NAME,SALARY,JOINING_DATE,DEPARTMENT  FROM employee WHERE SALARY < (SELECT MAX(SALARY) FROM employee);

----------------------------
(j)Select first_name, incentive amount from employee and incentives table for all 
Employees who got incentives using left join.
ans.--->
        SELECT incentives.*,FIRST_NAME FROM incentives LEFT JOIN employee on incentives.EMPLOYEE_REF_id=employee.EM_ID;

----------------------------
(k)Create View OF Employee table in which store first name, last name and salary
only.
ans.--->
        SELECT FIRST_NAME,LAST_NAME,SALARY FROM employee;

----------------------------
(l)Create Procedure to find out department wise highest salary.
ans.--->
        SELECT MAX(SALARY),DEPARTMENT FROM employee GROUP BY DEPARTMENT;

----------------------------
(m)Create after Insert trigger on Employee table which insert records in view table.
ans.--->
        

---------------------------------------------------------------------------------------------------------------------
---------------------------------------------------------------------------------------------------------------------
                                                Topic – SQL Task-2
---------------------------------------------------------------------------------------------------------------------
---------------------------------------------------------------------------------------------------------------------

CREATE TABLE SALES_PERSON
(
    SNO int PRIMARY KEY AUTO_INCREMENT,
    SNAME varchar(255),
    CITY varchar(255),
    COMM float
);

INSERT INTO sales_person(SNO, SNAME, CITY, COMM) VALUES 
('1001','PEEL','LONDON','0.12'),
('1002','SERRES','SAN JOSE','0.13'),
('1003','AXELROD','NEW YORK','0.1'),
('1004','MOTIKA','LONDON','0.11'),
('1007','RAFKIN','BARCELONA','0.15');

----------------------------

CREATE TABLE CUSTOMER
(
        CNM int PRIMARY KEY AUTO_INCREMENT,
        CNAME varchar(255),
        CITY varchar(255),
        RATING int,
        SNO int REFERENCES sales_person(SNO)
);

INSERT INTO customer (CNM, CNAME, CITY, RATING, SNO) VALUES 
('201', 'HOFFMAN', 'LONDON', '100', '1001'),
('202', 'GIOVANNE', 'ROME', '200', '1003'),
('203', 'LIU', 'SAN JOSE', '300', '1002'),
('204', 'GRASS', 'BARCELONA', '100', '1002'),
('206', 'CLEMENS', 'LONDON', '300', '1007'),
('207', 'PEREIRA', 'ROME', '100', '1004');

----------------------------

CREATE TABLE ORDERS
(
    ONM int PRIMARY KEY AUTO_INCREMENT,
    AMT float,
    ODE date,
    CNM int REFERENCES customer(CNM),
    SNO int REFERENCES sales_person(SNO)
);

INSERT INTO orders(ONM, AMT, ODE, CNM, SNO) VALUES
('3001','18.69','1994-10-03','201','1007'), 
('3002','1900.1','1994-10-03','207','1004'),
('3003','767.19','1994-10-03','201','1001'),
('3005','3005','1994-10-03','203','1002'),
('3006','3006','1994-10-04','201','1007'),
('3007','3007','1994-10-05','204','1002'),
('3008','3008','1994-10-05','206','1001'),
('3009','3009','1994-10-04','202','1003'),
('30010','3010','1994-10-06','204','1002'),
('30011','3011','1994-10-06','206','1001');

---------------------------------------------------------------------------------------------------------------------
----------------------------------------Questions And Answers.------------------------------------------------------>
---------------------------------------------------------------------------------------------------------------------

(a1)All orders for more than $1000.
ans.--->
        SELECT * FROM orders WHERE AMT>1000;

----------------------------
(b1)Names and cities of all salespeople in London with commission above 0.10.
ans.--->
        SELECT SNAME,CITY,COMM FROM sales_person WHERE CITY='london' AND COMM>0.10;

----------------------------
(c1)All salespeople either in Barcelona or in London.
ans.--->
        SELECT * FROM sales_person WHERE CITY in ('london','Barcelona');

----------------------------
(d1)All salespeople with commission between 0.10 and 0.12. (Boundary values should
be excluded).
ans.--->
        SELECT * FROM sales_person WHERE COMM BETWEEN 0.10 AND 0.12;

----------------------------
(e1)All customers with NULL values in city column.
ans.--->
        SELECT * FROM customer WHERE CITY='NULL';
                        OR
        SELECT * FROM customer WHERE CITY='';

----------------------------
(f1)All orders taken on Oct 3Rd and Oct 4th 1994.
ans.--->
        SELECT * FROM orders WHERE ODE in ('1994-10-03','1994-10-04');

----------------------------
(g1)All customers serviced by peel or Motika.
ans.--->
        SELECT customer.*,SNAME FROM customer LEFT JOIN sales_person on customer.SNO=sales_person.SNO WHERE sales_person.SNAME IN ('PEEL','MOTIKA');

----------------------------
(h1)All customers whose names begin with a letter from A to B.
ans.--->
        SELECT * FROM customer WHERE CNAME LIKE 'A%' OR CNAME LIKE 'B%';

----------------------------
(i1)All customers excluding those with rating <= 100 unless they are located in Rome.
ans.--->
        SELECT * FROM customer WHERE RATING<=100 AND CITY='rome';

----------------------------
(j1)All orders except those with 0 or NULL value in amt field.
ans.--->
        SELECT * FROM orders WHERE AMT IS NOT NULL AND AMT<>0;

----------------------------
(k1)Count the number of salespeople currently listing orders in the order table.
ans.--->
        
